{"version":3,"sources":["components/Todo/index.js","components/TodoList/index.js","components/TodoFilter/index.js","App.js","index.js"],"names":["Todo","todo","setTodoList","todoList","className","type","id","concat","checked","isActive","onChange","map","el","newEl","htmlFor","title","onClick","filter","td","TodoList","displayedList","key","TodoFilter","setFilter","href","App","useState","placeholder","onKeyUp","event","target","value","trim","length","String","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f230dd1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Todo({ todo, setTodoList, todoList }) {\n  return (\n    <>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={'todo-'.concat(todo.id)}\n          checked={!todo.isActive}\n          onChange={() => {\n            setTodoList(todoList\n              .map((el) => {\n                const newEl = el;\n\n                if (el.id === todo.id) {\n                  newEl.isActive = !el.isActive;\n                }\n\n                return newEl;\n              }));\n          }}\n        />\n        <label htmlFor={'todo-'.concat(todo.id)}>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => setTodoList(todoList.filter(td => td.id !== todo.id))}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  setTodoList: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from '../Todo';\n\nfunction TodoList({ todoList, setTodoList, displayedList }) {\n  return (\n    <ul className=\"todo-list\">\n      {displayedList.map(todo => (\n        <li key={todo.id}>\n          <Todo\n            todo={todo}\n            setTodoList={setTodoList}\n            todoList={todoList}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  displayedList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoFilter({ filter, setFilter, setTodoList, todoList }) {\n  return (\n    <>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={filter === 'All' ? 'selected' : ''}\n            onClick={() => setFilter('All')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={() => setFilter('Active')}\n            className={filter === 'Active' ? 'selected' : ''}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={() => setFilter('Completed')}\n            className={filter === 'Completed' ? 'selected' : ''}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => setTodoList(todoList.filter(todo => todo.isActive))}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n}\n\nTodoFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nexport default TodoFilter;\n","import React, { useState } from 'react';\nimport TodoList from './components/TodoList';\nimport TodoFilter from './components/TodoFilter';\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  let displayedList = todoList;\n  const [filter, setFilter] = useState('All');\n\n  if (filter === 'All') {\n    displayedList = todoList;\n  } else if (filter === 'Active') {\n    displayedList = todoList.filter(todo => todo.isActive);\n  } else if (filter === 'Completed') {\n    displayedList = todoList.filter(todo => !todo.isActive);\n  }\n\n  function addTodo(target) {\n    if (target.value.trim().length > 0) {\n      setTodoList([\n        ...todoList,\n        {\n          title: target.value,\n          id: todoList.length,\n          isActive: true,\n        },\n      ]);\n      const input = target;\n\n      input.value = '';\n    }\n  }\n\n  function toggleAll() {\n    setTodoList(todoList.map(todo => (\n      {\n        id: todo.id,\n        title: todo.title,\n        isActive: !todo.isActive,\n      }\n    )));\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onKeyUp={(event) => {\n            if (event.key === 'Enter') {\n              addTodo(event.target);\n            }\n          }}\n        />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={toggleAll}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <TodoList\n          displayedList={displayedList}\n          setTodoList={setTodoList}\n          todoList={todoList}\n        />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {String(todoList.filter(todo => todo.isActive).length).concat(' ')}\n          items left\n        </span>\n        <TodoFilter\n          filter={filter}\n          setFilter={setFilter}\n          setTodoList={setTodoList}\n          todoList={todoList}\n        />\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}